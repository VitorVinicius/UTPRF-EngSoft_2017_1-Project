/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Classes.Equipamento;
import Classes.FormaPagamento;
import Classes.Locacao;
import Classes.Locatario;
import Classes.Pagamento;
import Classes.StatusEquipamento;
import Classes.StatusLocacao;
import Classes.StatusLocatario;
import Database.Persistencia;
import java.awt.Frame;
import java.math.RoundingMode;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vitor
 */
public class TelaVisualizarLocacoes extends javax.swing.JDialog {

    /**
     * Creates new form TelaConsolidacaoReservas
     */
    private Locatario locatario;
    SimpleDateFormat formatoDataCompleta = new SimpleDateFormat("dd/MM/yyyy HH:mm"); 
    SimpleDateFormat formatoDataSimples= new SimpleDateFormat("dd/MM/yyyy"); 
    SimpleDateFormat formatoHora= new SimpleDateFormat("HH:mm:ss");
    
    private FormaPagamento formaPagamento;
    private Locacao locacao;
    private List<Object> locacoes;
    public TelaVisualizarLocacoes(java.awt.Frame parent, boolean modal, Locatario locatario,StatusLocacao status) {
        super(parent, modal);
        initComponents();
        this.locatario = locatario;
        carregarLocacoes(StatusLocacao.Aberta);
         jButton3.setVisible(true);
                jButton4.setVisible(true);
                jButton6.setVisible(false);
                jTextField4.setEnabled(false);
                jButton5.setEnabled(false);
                jComboBox1.setSelectedIndex(1);
                jComboBox1.setEnabled(false);
                jRadioButton1.setEnabled(false);
                jRadioButton2.setEnabled(false);
                jRadioButton3.setEnabled(false);
        jLabel9.setText(this.locatario.getNome());
    }
    public TelaVisualizarLocacoes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jButton3.setVisible(false);
        jButton4.setVisible(false);
        jLabel9.setVisible(false);
        jLabel10.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manutenção de Locações");
        setResizable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Locação", "ID Equipamento", "Saída", "Devolução", "Total", "Locatário", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
                jTable1RowSelectionEvent(event);

            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
        }

        jLabel1.setText("Forma de Pagamento:");

        jTextField1.setEditable(false);

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Locação", "ID Equipamento", "Parcela", "Data Pagamento", "Total", "Efetuado", "Forma de Pagamento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setColumnSelectionAllowed(true);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable2);
        jTable2.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
            public void valueChanged(ListSelectionEvent event) {
                jTable2RowSelectionEvent(event);

            }
        });
        jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
            jTable2.getColumnModel().getColumn(5).setResizable(false);
        }
        jTable2.getModel().addTableModelListener(
            new TableModelListener()
            {
                public void tableChanged(TableModelEvent evt)
                {
                    jTable2TableChanged(evt);
                }
            });

            jLabel2.setText("Parcelas:");

            jSpinner1.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
            jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
                public void stateChanged(javax.swing.event.ChangeEvent evt) {
                    jSpinner1StateChanged(evt);
                }
            });

            jLabel3.setText("Data Pagamento:");

            jSpinner2.setModel(new javax.swing.SpinnerDateModel());
            JSpinner.DateEditor jSpinner2D = new JSpinner.DateEditor(jSpinner2, "dd/MM/yyyy");
            jSpinner2.setEditor(jSpinner2D);

            jButton2.setText("Incluir Pagamento");
            jButton2.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton2ActionPerformed(evt);
                }
            });

            jLabel4.setText("ID:");

            jTextField2.setEditable(false);

            jButton3.setText("Autorizar Seleção");
            jButton3.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton3ActionPerformed(evt);
                }
            });

            jLabel5.setText("Estado:");

            jCheckBox1.setText("Efetuado");

            jLabel6.setText("Valor:");

            jButton4.setText("Autorizar Locações");
            jButton4.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton4ActionPerformed(evt);
                }
            });

            jLabel7.setText("Filtrar por:");

            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todas", "Reservas", "Atrasadas", "Em dia", "Pamentos Pendentes" }));
            jComboBox1.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox1ActionPerformed(evt);
                }
            });
            jComboBox1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
                public void propertyChange(java.beans.PropertyChangeEvent evt) {
                    filtrarLocacoes(evt);
                }
            });

            jLabel8.setText("Buscar:");

            buttonGroup1.add(jRadioButton1);
            jRadioButton1.setText("ID Loc.");

            buttonGroup1.add(jRadioButton2);
            jRadioButton2.setText("ID Equip.");

            buttonGroup1.add(jRadioButton3);
            jRadioButton3.setSelected(true);
            jRadioButton3.setText("Doc./Nome Locatário");

            jButton5.setText("Buscar");
            jButton5.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton5ActionPerformed(evt);
                }
            });

            jButton6.setText("Limpar Busca");
            jButton6.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton6ActionPerformed(evt);
                }
            });

            jButton7.setText("Marcar como Devolvida/Retirar Reserva");
            jButton7.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton7ActionPerformed(evt);
                }
            });

            jLabel9.setText("N/A");
            jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jLabel9MouseClicked(evt);
                }
            });

            jLabel10.setText("Cliente:");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1)
                        .addComponent(jScrollPane2)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextField1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton1))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(0, 0, Short.MAX_VALUE)))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(140, 140, 140))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5)
                                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jButton6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7)
                            .addGap(18, 18, 18)
                            .addComponent(jButton3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton4))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton5))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jRadioButton1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jRadioButton2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jRadioButton3)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel9))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(5, 5, 5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButton1)
                        .addComponent(jRadioButton2)
                        .addComponent(jRadioButton3)
                        .addComponent(jLabel9)
                        .addComponent(jLabel10))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jCheckBox1)
                                .addComponent(jButton2)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton1)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton4)
                            .addComponent(jButton7)))
                    .addGap(0, 0, Short.MAX_VALUE))
            );

            pack();
            setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        if(this.formaPagamento == null){
            JOptionPane.showMessageDialog(null, "Escolha uma forma de pagamento primeiro!", "Forma de pagamento não selecionda", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try {
            int parcelas = (int)jSpinner1.getValue();
            Date dataPagamento =(Date) jSpinner2.getValue();
            Calendar c = Calendar.getInstance(); 
            c.setTime(dataPagamento); 
            
            for(int i=0; i<parcelas;i++ ){
                Pagamento pagamento = new Pagamento();
                pagamento.setParcela(i+1);
                pagamento.setTotalParcelas(parcelas);
                pagamento.setFormaPagamento(formaPagamento);
                pagamento.setPendente(!jCheckBox1.isSelected());
                pagamento.setReferencia(pagamento.getParcela()+"ª parcela de "+parcelas + " ref. locacao "+ locacao.getId());
               
                if(i>0){
                    c.add(Calendar.DATE, 30);
                    dataPagamento = c.getTime();
                }
                pagamento.setDataPagamento(dataPagamento);
                pagamento.setValor(Float.parseFloat(jTextField3.getText()));
                locacao.getPagamentos().add(pagamento);
                listarPagamento(locacao,pagamento);
            }
            Main.getFuncionario().atualizarLocacao(locacao);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.toString(), "Erro ao incluir pagamento no locacao selecionada", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(TelaVisualizarLocacoes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       TelaGerenciarFormasPagamento tela = new TelaGerenciarFormasPagamento((Frame)null,true,true);
       tela.setVisible(true);
       this.formaPagamento = tela.getFormaPagSelecionada();
       if(this.formaPagamento !=null)
            jTextField1.setText(this.formaPagamento.getNome());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
        DecimalFormat df = new DecimalFormat("###.##");
        df.setRoundingMode(RoundingMode.DOWN);    
        jTextField3.setText(String.valueOf(df.format(this.locacao.getValorDiaria()/(int)jSpinner1.getValue())));
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       if(this.locacao!=null){
           try {
               Main.getFuncionario().fazerLocacao(this.locacao);
               carregarLocacoes(StatusLocacao.Aberta);
               JOptionPane.showMessageDialog(null, "Locação '" + this.locacao.toString() +"' autorizada com sucesso.", "Autorizado", JOptionPane.INFORMATION_MESSAGE);
           
           } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro ao autorizar locação", JOptionPane.ERROR_MESSAGE);
           
               Logger.getLogger(TelaVisualizarLocacoes.class.getName()).log(Level.SEVERE, null, ex);
           }
       }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        if (this.locacoes != null) {
            try {
                for (Object obj : locacoes) {
                    Locacao loc = (Locacao) obj;

                    Main.getFuncionario().fazerLocacao(loc);
                   
                }
                carregarLocacoes(StatusLocacao.Aberta);
                 JOptionPane.showMessageDialog(null, "Locações autorizadas com sucesso.", "Autorizado", JOptionPane.INFORMATION_MESSAGE);

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro ao autorizar locação", JOptionPane.ERROR_MESSAGE);

                Logger.getLogger(TelaVisualizarLocacoes.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void filtrarLocacoes(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_filtrarLocacoes
        // TODO add your handling code here:
    }//GEN-LAST:event_filtrarLocacoes

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       this.buscarLocacoes();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void carregarCliente() {
        try {
            
            
            Query query = null;
            try{
                query = Persistencia.getManager().createQuery("select t from Locatario as t where (t.cpf like ?  or t.cnpj like ? or t.id = ?) and t.status <> ? order by t.id desc");
                query.setParameter(1,String.valueOf(Long.parseLong(jTextField4.getText())));
                query.setParameter(2, String.valueOf(Long.parseLong(jTextField4.getText())));
                query.setParameter(3, Long.parseLong(jTextField4.getText()));
                query.setParameter(4, StatusLocatario.Apagado);
            }catch(Exception ex){
                query = Persistencia.getManager().createQuery("select t from Locatario as t where t.nome like ? and t.status <> ? order by t.id desc");
                query.setParameter(1,"%"+jTextField4.getText()+"%");
                query.setParameter(2, StatusLocatario.Apagado);
            }
            
            
            query.setMaxResults(1);
            List<Object> locatarios = Persistencia.buscar(query);
             for(int i=0; i< locatarios.size();i++){
                    this.locatario = (Locatario)locatarios.get(i);
            }
            if(this.locatario!=null){
                this.carregarLocacoes(StatusLocacao.Atrasada);
                jComboBox1.setSelectedIndex(2);
                jLabel9.setText(this.locatario.getNome());
                jLabel9.setVisible(true);
                jLabel10.setVisible(true);
            }else{
                JOptionPane.showMessageDialog(null, "Cliente não encontrado.", "Cliente", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.toString(), "Erro ao obter cliente", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        jButton3.setVisible(false);
        jButton4.setVisible(false);
        
        switch(jComboBox1.getSelectedIndex()){
            case 0:
                this.carregarLocacoes(null);
                break;
            case 1:
                this.carregarLocacoes(StatusLocacao.Aberta);
               jButton3.setVisible(true);
               jButton4.setVisible(true);
                break;   
            case 2:
                this.carregarLocacoes(StatusLocacao.Atrasada);
                
                break; 
            case 3:
                this.carregarLocacoes(StatusLocacao.EmDia);
                break; 
            default:
                carregarLocacaoPagamentoPendente();
                break;
        }
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
            if(this.locacao == null) return;
            if(this.locacao.getStatus() == StatusLocacao.Devolvida || this.locacao.getStatus() == StatusLocacao.Rejeitada){
                JOptionPane.showMessageDialog(null, "A locação selecionada já foi encerrada e não pode ter seu status modificado.", "Aviso", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if(this.locacao.getStatus() == StatusLocacao.Aberta){
                this.locacao.setStatus(StatusLocacao.Rejeitada);
            }
            else
            {
                this.locacao.setStatus(StatusLocacao.Devolvida);
            }
            this.locacao.getEquipamento().setStatus(StatusEquipamento.Disponivel);
            Main.getFuncionario().atualizarLocacao(locacao);
            this.carregarLocacoes(StatusLocacao.Atrasada);
            jComboBox1.setSelectedIndex(2);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.toString(), "Erro ao modificar locação", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(TelaVisualizarLocacoes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.locatario = null;
        jTextField4.setText("");
        jLabel9.setText("N/A");
        jLabel9.setVisible(false);
        jLabel10.setVisible(false);
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        if(this.locatario!=null){
            TelaCadastroCliente tela =  new TelaCadastroCliente((Frame)null,true,this.locatario);
               tela.carregarDadosLocatarioEdicao();
               tela.setVisible(true);
        }
    }//GEN-LAST:event_jLabel9MouseClicked
    private void jTable1RowSelectionEvent(ListSelectionEvent evt){
        try{
            this.locacao =(Locacao) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
            listarPagamentos(this.locacao);
            jTextField2.setText(String.valueOf(locacao.getId()));
            jSpinner1.setValue(1);
            jTextField3.setText(String.valueOf(this.locacao.getValorDiaria()));
            
            if(jTable1.getSelectedColumn() == 5){
               TelaCadastroCliente tela =  new TelaCadastroCliente((Frame)null,true,this.locacao.getLocatario());
               tela.carregarDadosLocatarioEdicao();
               tela.setVisible(true);
            }
            
        }
        catch(ArrayIndexOutOfBoundsException ex){
        }
    }
   private void jTable2RowSelectionEvent(ListSelectionEvent evt){
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables

    private void carregarLocacoes(StatusLocacao statusLocacao) {
         Query query = null;
         if(this.locatario!= null){
            if(statusLocacao!=null){
                   query = Persistencia.getManager().createQuery("select t from Locacao as t where t.status = ?  and t.locatario = ? order by t.id desc");
                   query.setParameter(1, statusLocacao);
                   query.setParameter(2, this.locatario);
            }
            else{
                query = Persistencia.getManager().createQuery("select t from Locacao as t where t.locatario = ? order by t.id desc");
                query.setParameter(1, this.locatario);
            }
         }
         else{
            if(statusLocacao!=null){
                   query = Persistencia.getManager().createQuery("select t from Locacao as t where t.status = ?  order by t.id desc");
                   query.setParameter(1, statusLocacao);
            }
            else{
                query = Persistencia.getManager().createQuery("select t from Locacao as t order by t.id desc");
                query.setMaxResults(1000);
            }
         }
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        try {
            
            locacoes = Persistencia.buscar(query);
             for(int i=0; i< locacoes.size();i++){
                    Locacao loc = (Locacao)locacoes.get(i);
                    Object[] linha = new Object[]{
                                loc,
                                loc.getEquipamento().getId(),
                                this.formatoDataCompleta.format(loc.getDataLocacao()),
                                this.formatoDataCompleta.format(loc.getDataDevolucao()),
                                loc.getTotalLocacao(),
                                loc.getLocatario().getNome(),
                                loc.getStatus().name()
                            };
                   model.addRow(linha);
                   
              }
            
             if(!locacoes.isEmpty()){
                 this.locacao = (Locacao) locacoes.get(0);
                 listarPagamentos(this.locacao);
             }
            
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.toString(), "Erro ao obter locações", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    private void buscarLocacoes() {
         Query query = null;
         if(jRadioButton2.isSelected()){
                query = Persistencia.getManager().createQuery("select t from Locacao as t where t.equipamento.id = ?  order by t.id desc");
            }
            else
         if(jRadioButton1.isSelected()){
                query = Persistencia.getManager().createQuery("select t from Locacao as t where t.id = ? order by t.id desc");
            }
         else{
             carregarCliente();
             
             return;
         }
       try {
        query.setParameter(1, Long.parseLong(jTextField4.getText()));
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
            
            locacoes = Persistencia.buscar(query);
             for(int i=0; i< locacoes.size();i++){
                    Locacao loc = (Locacao)locacoes.get(i);
                    Object[] linha = new Object[]{
                                loc,
                                loc.getEquipamento().getId(),
                                this.formatoDataCompleta.format(loc.getDataLocacao()),
                                this.formatoDataCompleta.format(loc.getDataDevolucao()),
                                loc.getTotalLocacao(),
                                loc.getLocatario().getNome(),
                                loc.getStatus().name()
                            };
                   model.addRow(linha);
                   
              }
            
             if(!locacoes.isEmpty()){
                 this.locacao = (Locacao) locacoes.get(0);
                 listarPagamentos(this.locacao);
             }
            
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.toString(), "Erro ao obter reservas do cliente", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    private void listarPagamento(Locacao locacaoAssociada,Pagamento pagamento) {
        Object[] linha = new Object[]{
                                locacaoAssociada,
                                locacaoAssociada.getEquipamento(),
                                pagamento.getParcela()+"/"+pagamento.getTotalParcelas(),
                                this.formatoDataSimples.format(pagamento.getDataPagamento()),
                                pagamento,
                                !pagamento.getPendente(),
                                pagamento.getFormaPagamento().getNome()
                                
                            };
        ((DefaultTableModel) jTable2.getModel()).addRow(linha);
    }
    
    private void jTable2TableChanged(TableModelEvent evt) {
        try {
            int linha = evt.getFirstRow();
            switch(evt.getColumn()){
                case 5:
                    Pagamento pagamento = (Pagamento)jTable2.getModel().getValueAt(linha, 4);
                    boolean estado = (boolean)jTable2.getModel().getValueAt(linha, 5);
                    pagamento.setPendente(!estado);
                    Main.getFuncionario().atualizarLocacao(locacao);
                    break;
                default: break;
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.toString(), "Erro ao alterar pagamento", JOptionPane.ERROR_MESSAGE);
            
            Logger.getLogger(TelaVisualizarLocacoes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void listarPagamentos(Locacao locacao) {
        
        Set<Pagamento> pagamentos = this.locacao.getPagamentos();
        if(pagamentos == null) return;
        ((DefaultTableModel) jTable2.getModel()).setRowCount(0);
        this.locacao = locacao;
                 for(Pagamento pagamento :pagamentos){
                    listarPagamento(this.locacao,pagamento);
                 }
                 jTextField2.setText(this.locacao.toString());
    }

    private void carregarLocacaoPagamentoPendente() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    
    
    
    
}
